{{- range $i, $gateway := .Values.gateways }}
{{- if $gateway.enabled }}
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: gateway-{{ $gateway.name }}
  namespace: {{ $.Release.Namespace }}
spec:
  provider:
    type: Kubernetes
    {{- if $gateway.service }}
    kubernetes:
      envoyService:
        {{- with $gateway.service.annotations }}
        annotations:
          {{- (tpl (. | toYaml | toString ) $) | nindent 10 }}
        {{- end }}
    {{- end }}
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: {{ $gateway.name }}
  namespace: {{ $.Release.Namespace }}
  {{- with $gateway.labels }}
  labels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with $gateway.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  gatewayClassName: {{ $gateway.className }}
  infrastructure:
    parametersRef:
      group: gateway.envoyproxy.io
      kind: EnvoyProxy
      name: gateway-{{ $gateway.name }}
      namespace: {{ $.Release.Namespace }}
  listeners:
    {{- range $gateway.listeners }}
    - name: {{ .name }}
      protocol: {{ .protocol }}
      port: {{ .port }}
      {{- with .allowedRoutes }}
      allowedRoutes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .hostname }}
      hostname: {{ tpl (. | quote) $ }}
      {{- end }}
      {{- with .tls }}
      tls:
        mode: {{ .mode }}
        {{- if and (eq .mode "Terminate") ($gateway.certificate.enabled) }}
        certificateRefs:
        - kind: Secret
          name: gateway-{{ $gateway.name }}-tls
        {{- end }}
        {{- with .certificateRefs }}
        - kind: Secret
          name: {{ .name }}
          namespace: {{ .namespace }}
        {{- end }}
      {{- end }}
    {{- end }}
{{- end }}
{{- end }}
